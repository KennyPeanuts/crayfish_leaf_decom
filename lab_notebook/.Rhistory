x <- read.table("~/Downloads/Data Sheet or A and P - Sheet4.csv", header = T, sep = ",")
str(x)
age_fine <- anova(Fine ~ Age_group, data = x)
age_fine <- aov(Fine ~ Age_group, data = x)
anova(age_fine)
Tukey_HSD(age_fine)
Tukey.HSD(age_fine)
TukeyHSD(age_fine)
age_gross <- aov(Gross ~ Age_group, data = x)
anova(age_gross)
---
TukeyHSD(age_gross)
plot(Gross ~ Age_group)
plot(Gross ~ Age_group, data = x)
plot(Fine ~ Age_group, data = x)
---
# Test of Visual by Age_group
age_visual <- aov(Visual ~ Age_group, data = x)
---
# Test of Visual by Age_group
age_visual <- aov(Visual ~ Age_group, data = x)
---
# Test of Visual by Age_group
age_visual <- aov(Visual ~ Age_group, data = x)
Age_group  2  40567 20283.5  26.255 9.076e-07 ***
Residuals 24  18541   772.5
age_visual <- aov(Visual ~ Age_group, data = x)
anova(age_visual)
plot(Visual ~ Age_group, data = x)
plot(Visio ~ Age_group, data = x)
plot(Visuo ~ Age_group, data = x)
# Test of Visuo by Age_group
age_visuo <- aov(Visuo ~ Age_group, data = x)
anova(age_visuo)
TukeyHSD(age_visuo)
TukeyHSD(age_visual)
setwd("~/current_research/crayfish_leaf_decom")
library("tidyverse") # for data analysis and ggplot graphing
library("ggpubr") # for plot creation and saving
cray.raw <- read.table("./data/crayfish_mass_raw.csv", header = T, sep = ",")
mean.mass <- cray.raw %>%
group_by(Year, Type, Tank) %>%
summarize(mean.Stocked.Mass = mean(Stocked_Mass, na.rm = T), sd.Stocked.Mass = sd(Stocked_Mass), mean.Harvested.Mass = mean(Harvested_Mass, na.rm = T), sd.Harvested.Mass = sd(Harvested_Mass), total.Harvested.Mass = sum(Harvested_Mass, na.rm = T))
setwd("~/current_research/crayfish_leaf_decom/lab_notebook")
cray.raw <- read.table("./data/crayfish_mass_raw.csv", header = T, sep = ",")
mean.mass <- cray.raw %>%
group_by(Year, Type, Tank) %>%
summarize(mean.Stocked.Mass = mean(Stocked_Mass, na.rm = T), sd.Stocked.Mass = sd(Stocked_Mass), mean.Harvested.Mass = mean(Harvested_Mass, na.rm = T), sd.Harvested.Mass = sd(Harvested_Mass), total.Harvested.Mass = sum(Harvested_Mass, na.rm = T))
tank.abundance <- cray.raw %>%
group_by(Year, Type, Tank) %>%
summarize(Abundance = unique(Abundance), Total.Abundance = unique(Total_Abundance), Invasive.Abundance = unique(Invasive_Abundance))
tank.treatment <- cray.raw %>%
group_by(Year, Type, Tank) %>%
summarize(Treatment = unique(Treatment))
cray.mean <-
left_join(mean.mass, tank.abundance)
cray.mean <-
left_join(cray.mean, tank.treatment)
ind.delta.mass <- cray.mean$mean.Harvested.Mass - cray.mean$mean.Stocked.Mass
cray.mean <- data.frame(cray.mean, ind.delta.mass)
ggplot(subset(cray.mean, Year == "2016"), mapping = aes(y = ind.delta.mass, x = Total.Abundance, color = Type)) +
geom_point() +
geom_smooth(
method = "lm"
) +
theme_classic()
ggplot(subset(cray.mean, Year == "2016"), mapping = aes(y = total.Harvested.Mass, x = Total.Abundance, color = Type)) +
geom_point() +
geom_smooth(
method = "lm"
) +
theme_classic()
summary(lm(ind.delta.mass ~ Total.Abundance * Type, data = cray.mean))
anova(lm(ind.delta.mass ~ Total.Abundance * Type, data = cray.mean))
summary(lm(log10(ind.delta.mass) ~ Total.Abundance * Type, data = cray.mean))
summary(lm(total.Harvested.Mass ~ Total.Abundance * Type, data = cray.mean))
summary(lm(total.Harvested.Mass ~ Treatment * Type, data = cray.mean))
anova(lm(total.Harvested.Mass ~ Treatment * Type, data = cray.mean))
anova(lm(ind.delta.mass ~ Treatment * Type, data = cray.mean))
ggplot(subset(cray.mean, Year == "2016"), mapping = aes(y = total.Harvested.Mass, x = Treatment, color = Type)) +
geom_jitter(
width = 0.1
) +
geom_box(
) +
theme_classic()
ggplot(subset(cray.mean, Year == "2016"), mapping = aes(y = total.Harvested.Mass, x = Treatment, color = Type)) +
geom_jitter(
width = 0.1
col = 8
) +
stat_summary(
fun = mean,
fun.min = function(x) mean(x) - sd(x),
fun.max = function(x) mean(x) + sd(x)
) +
theme_classic()
ggplot(subset(cray.mean, Year == "2016"), mapping = aes(y = total.Harvested.Mass, x = Treatment, color = Type)) +
geom_jitter(
width = 0.1
col = 8
) +
stat_summary(
fun = mean,
fun.min = function(x) mean(x) - sd(x),
fun.max = function(x) mean(x) + sd(x)
) +
theme_classic()
ggplot(subset(cray.mean, Year == "2016"), mapping = aes(y = total.Harvested.Mass, x = Treatment, color = Type)) +
geom_jitter(
width = 0.1
col = 8
)
Initially the change in mass was measured as the final mass of the *tank* minus the initial mass of the *tank*. This measured the change in total crayfish mass in the tank and any dead crayfish were not incuded in the final mass (because they has been eaten). The results of this analysis can be seen below in [Analysis of Tank Mass Change](#analysis-of-tank-mass-change). As a result of this way of calculating mass change, tanks that had crayfish deaths could have negative growth.  This way of calculating mass change seemed to conflate the effects of individual crayfish growth and the total mass that a tank could support.
To better distingish between patterns in these two components of the ecology, we are analyzing them separately as the estimated change in mass of an individual crayfish and the total crayfish mass in the tank at the end of the experiment.
### Import Data
cray.raw <- read.table("./data/crayfish_mass_raw.csv", header = T, sep = ",")
### Create variables
#### Calculate the mean of the stocked mass and harvested mass for species in each tank
This code calculates the mean stocked mass and harvested mass of all the crayfish in each tank and produces a new data.frame with the values. The code also calculates the total mass of each species of crayfish at the end of the experiment.
mean.mass <- cray.raw %>%
group_by(Year, Type, Tank) %>%
summarize(mean.Stocked.Mass = mean(Stocked_Mass, na.rm = T), sd.Stocked.Mass = sd(Stocked_Mass), mean.Harvested.Mass = mean(Harvested_Mass, na.rm = T), sd.Harvested.Mass = sd(Harvested_Mass), total.Harvested.Mass = sum(Harvested_Mass, na.rm = T))
#### Create a data.frame with the crayfish abundance of each tank not replicated for the number of crayfish
This code produces a data.frame with a single abundance value for each tank by using `unique` to select only a single abundance value from the replicate crayfish values.
tank.abundance <- cray.raw %>%
group_by(Year, Type, Tank) %>%
summarize(Abundance = unique(Abundance), Total.Abundance = unique(Total_Abundance), Invasive.Abundance = unique(Invasive_Abundance))
#### Create a data.frame with the treatment designation of each tank not replicated for the number of crayfish
This code produces a data.frame with a single treatment value for each tank by using `unique` to select only a single abundance value from the replicate crayfish values.
tank.treatment <- cray.raw %>%
group_by(Year, Type, Tank) %>%
summarize(Treatment = unique(Treatment))
#### Merge the mean.mass data.frame with the cray.raw data frame
cray.mean <-
left_join(mean.mass, tank.abundance)
cray.mean <-
left_join(cray.mean, tank.treatment)
#### Calculate the estimated change in mass of an individual crayfish for each species.
This code subtracts the estmated stocked mass from the estimated harvested mass of a single crayfish in each tank.
ind.delta.mass <- cray.mean$mean.Harvested.Mass - cray.mean$mean.Stocked.Mass
### Create data.frame for analyis
cray.mean <- data.frame(cray.mean, ind.delta.mass)
### Variable Descriptions
* Year = the year of the study
* Type = the description of whether the crayfish is "Invasive" or "Native". Invasive crayfish were _P. clarkii_ in 2015, and _F. virilis_ in 2016. The Native crayfish were _C. sp. C_ in both years.
* Tank = the unique ID number of the experimental unit (tank).
* mean.Stocked.Mass = the mean mass of the crayfish stocked in the tank of a given treatment and crayfish type. (g)
* sd.Stocked.Mass = the standard deviation of the mean of the mass of the crayfish stocked in the tank of a given treatment and crayfish type. (g)
* mean.Harvested.Mass = the mean mass of the crayfish harvested from the tank of a given treatment and crayfish type at the end of the experiment. Missing (presumed dead) crayfish were not included in the mean. (g)
* sd.Harvested.Mass = the standard deviation of the mean of the mass of the crayfish harvested from the tank of a given treatment and crayfish type at the end of the experiment. (g)
* total.Harvested.Mass = the sum of the mass of the crayfish harvested from the tank of a given treatment and crayfish type at the end of the experiment. Missing (presumed dead) crayfish were not included in the sum. (g)
* Abundance = the number of crayfish of a given type stocked into each tank at the beginning of the experiment.
* Total.Abundance = the total number of crayfish in each tank (native + invasive) stocked into each tank at the beginning of the experiment.
* Invasive.Abundance = the number of invasive crayfish stocked into each tank at the beginning of the experiment.
* Treatment = the treatment level identifier, where "Ctl_Invasive" indicates a tank with only invasive crayfish, "Ctl_Native" indicates a tank with only native crayfish, "Equal" indicates a tank with equal numbers of invasive and native crayfish, "Low" indicates a tank with more native than invasive crayfish, and "High" indicates a tank with more invasive than native crayfish.
* ind.delta.mass = the estimated change in mass of a crayfish in a tank over the course of the experiment measured as the mean harvested mass minus the mean stocked mass. (g)
### Data Visualizations
ggplot(subset(cray.mean, Year == "2016"), mapping = aes(y = ind.delta.mass, x = Total.Abundance, color = Type)) +
geom_point() +
geom_smooth(
method = "lm"
) +
theme_classic()
ggplot(subset(cray.mean, Year == "2016"), mapping = aes(y = total.Harvested.Mass, x = Total.Abundance, color = Type)) +
geom_point() +
geom_smooth(
method = "lm"
) +
theme_classic()
ggplot(subset(cray.mean, Year == "2016"), mapping = aes(y = total.Harvested.Mass, x = Treatment, color = Type)) +
geom_jitter(
width = 0.1
col = 8
) )
Initially the change in mass was measured as the final mass of the *tank* minus the initial mass of the *tank*. This measured the change in total crayfish mass in the tank and any dead crayfish were not incuded in the final mass (because they has been eaten). The results of this analysis can be seen below in [Analysis of Tank Mass Change](#analysis-of-tank-mass-change). As a result of this way of calculating mass change, tanks that had crayfish deaths could have negative growth.  This way of calculating mass change seemed to conflate the effects of individual crayfish growth and the total mass that a tank could support.
To better distingish between patterns in these two components of the ecology, we are analyzing them separately as the estimated change in mass of an individual crayfish and the total crayfish mass in the tank at the end of the experiment.
### Import Data
cray.raw <- read.table("./data/crayfish_mass_raw.csv", header = T, sep = ",")
### Create variables
#### Calculate the mean of the stocked mass and harvested mass for species in each tank
This code calculates the mean stocked mass and harvested mass of all the crayfish in each tank and produces a new data.frame with the values. The code also calculates the total mass of each species of crayfish at the end of the experiment.
mean.mass <- cray.raw %>%
group_by(Year, Type, Tank) %>%
summarize(mean.Stocked.Mass = mean(Stocked_Mass, na.rm = T), sd.Stocked.Mass = sd(Stocked_Mass), mean.Harvested.Mass = mean(Harvested_Mass, na.rm = T), sd.Harvested.Mass = sd(Harvested_Mass), total.Harvested.Mass = sum(Harvested_Mass, na.rm = T))
#### Create a data.frame with the crayfish abundance of each tank not replicated for the number of crayfish
This code produces a data.frame with a single abundance value for each tank by using `unique` to select only a single abundance value from the replicate crayfish values.
tank.abundance <- cray.raw %>%
group_by(Year, Type, Tank) %>%
summarize(Abundance = unique(Abundance), Total.Abundance = unique(Total_Abundance), Invasive.Abundance = unique(Invasive_Abundance))
#### Create a data.frame with the treatment designation of each tank not replicated for the number of crayfish
This code produces a data.frame with a single treatment value for each tank by using `unique` to select only a single abundance value from the replicate crayfish values.
tank.treatment <- cray.raw %>%
group_by(Year, Type, Tank) %>%
summarize(Treatment = unique(Treatment))
#### Merge the mean.mass data.frame with the cray.raw data frame
cray.mean <-
left_join(mean.mass, tank.abundance)
cray.mean <-
left_join(cray.mean, tank.treatment)
#### Calculate the estimated change in mass of an individual crayfish for each species.
This code subtracts the estmated stocked mass from the estimated harvested mass of a single crayfish in each tank.
ind.delta.mass <- cray.mean$mean.Harvested.Mass - cray.mean$mean.Stocked.Mass
### Create data.frame for analyis
cray.mean <- data.frame(cray.mean, ind.delta.mass)
### Variable Descriptions
* Year = the year of the study
* Type = the description of whether the crayfish is "Invasive" or "Native". Invasive crayfish were _P. clarkii_ in 2015, and _F. virilis_ in 2016. The Native crayfish were _C. sp. C_ in both years.
* Tank = the unique ID number of the experimental unit (tank).
* mean.Stocked.Mass = the mean mass of the crayfish stocked in the tank of a given treatment and crayfish type. (g)
* sd.Stocked.Mass = the standard deviation of the mean of the mass of the crayfish stocked in the tank of a given treatment and crayfish type. (g)
* mean.Harvested.Mass = the mean mass of the crayfish harvested from the tank of a given treatment and crayfish type at the end of the experiment. Missing (presumed dead) crayfish were not included in the mean. (g)
* sd.Harvested.Mass = the standard deviation of the mean of the mass of the crayfish harvested from the tank of a given treatment and crayfish type at the end of the experiment. (g)
* total.Harvested.Mass = the sum of the mass of the crayfish harvested from the tank of a given treatment and crayfish type at the end of the experiment. Missing (presumed dead) crayfish were not included in the sum. (g)
* Abundance = the number of crayfish of a given type stocked into each tank at the beginning of the experiment.
* Total.Abundance = the total number of crayfish in each tank (native + invasive) stocked into each tank at the beginning of the experiment.
* Invasive.Abundance = the number of invasive crayfish stocked into each tank at the beginning of the experiment.
* Treatment = the treatment level identifier, where "Ctl_Invasive" indicates a tank with only invasive crayfish, "Ctl_Native" indicates a tank with only native crayfish, "Equal" indicates a tank with equal numbers of invasive and native crayfish, "Low" indicates a tank with more native than invasive crayfish, and "High" indicates a tank with more invasive than native crayfish.
* ind.delta.mass = the estimated change in mass of a crayfish in a tank over the course of the experiment measured as the mean harvested mass minus the mean stocked mass. (g)
### Data Visualizations
ggplot(subset(cray.mean, Year == "2016"), mapping = aes(y = ind.delta.mass, x = Total.Abundance, color = Type)) +
geom_point() +
geom_smooth(
method = "lm"
) +
theme_classic()
ggplot(subset(cray.mean, Year == "2016"), mapping = aes(y = total.Harvested.Mass, x = Total.Abundance, color = Type)) +
geom_point() +
geom_smooth(
method = "lm"
) +
theme_classic()
ggplot(subset(cray.mean, Year == "2016"), mapping = aes(y = total.Harvested.Mass, x = Treatment, color = Type)) +
geom_jitter(
width = 0.1
col = 8
) )
ggplot(subset(cray.mean, Year == "2016"), mapping = aes(y = total.Harvested.Mass, x = Total.Abundance, color = Type)) +
geom_point() +
geom_smooth(
method = "lm"
) +
theme_classic()
ggplot(subset(cray.mean, Year == "2016"), mapping = aes(y = total.Harvested.Mass, x = Treatment, color = Type)) +
geom_jitter(
width = 0.1
col = 8
)
ggplot(subset(cray.mean, Year == "2016"), mapping = aes(y = total.Harvested.Mass, x = Treatment, color = Type)) +
geom_jitter(
width = 0.1,
col = 8
)
ggplot(subset(cray.mean, Year == "2016"), mapping = aes(y = total.Harvested.Mass, x = Treatment, color = Type)) +
geom_jitter(
width = 0.1,
col = 8
) +
stat_summary(
fun = mean,
fun.min = function(x) mean(x) - sd(x),
fun.max = function(x) mean(x) + sd(x)
) +
theme_classic()
ggplot(subset(cray.mean, Year == "2016"), mapping = aes(y = total.Harvested.Mass, x = Treatment, color = Type)) +
geom_jitter(
width = 0.1,
) +
stat_summary(
fun = mean,
fun.min = function(x) mean(x) - sd(x),
fun.max = function(x) mean(x) + sd(x)
) +
theme_classic()
ggplot(subset(cray.mean, Year == "2016"), mapping = aes(y = ind.delta.mass, x = Treatment, color = Type)) +
geom_jitter(
width = 0.1,
) +
stat_summary(
fun = mean,
fun.min = function(x) mean(x) - sd(x),
fun.max = function(x) mean(x) + sd(x)
) +
theme_classic()
