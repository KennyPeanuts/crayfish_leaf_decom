plot(delta.Y ~ D, type = "p")
E <- 10 - 0.02*D^2
M <- D - D^2 + 10
L <- E + M
S <- 10 + 0.09*D^2
O <- D - D^2 + 0
G <- S + O
delta.Y <- G - L
plot(delta.Y ~ D, type = "p")
E <- 10 - 0.02*D^2
M <- 0.1*D - 0.1*D^2 + 10
L <- E + M
S <- 10 + 0.09*D^2
O <- D - D^2 + 0
G <- S + O
delta.Y <- G - L
plot(delta.Y ~ D, type = "p")
M <- 0.6*D - 0.6*D^2 + 10
L <- E + M
S <- 10 + 0.09*D^2
O <- D - D^2 + 0
G <- S + O
delta.Y <- G - L
plot(delta.Y ~ D, type = "p")
D <- runif(100, min = 0, max = 1)
E <- 10 - 0.02*D^2
M <- 1*D - 1*D^2 + 10
L <- E + M
S <- 10 + 0.09*D^2
O <- 1*D - 1*D^2 + 0
G <- S + O
delta.Y <- G - L
plot(delta.Y ~ D, type = "p")
E <- 10 - 0.02*D^2
M <- 1*D - 1*D^2 + 10
L <- E + M
S <- 10 + 0.09*D^2
O <- 2*D - 2*D^2 + 0
G <- S + O
delta.Y <- G - L
plot(delta.Y ~ D, type = "p")
E <- 10 - 0.02*D^2
M <- 1*D - 1*D^2 + 10
L <- E + M
S <- 10 + 0.09*D^2
O <- 1.5*D - 1.5*D^2 + 0
G <- S + O
delta.Y <- G - L
plot(delta.Y ~ D, type = "p")
D <- runif(100, min = 0, max = 1)
E <- 1 - 0.02*D^2
M <- 1*D - 1*D^2 + 1
L <- E + M
S <- 1 + 0.09*D^2
O <- 1.5*D - 1.5*D^2 + 0
G <- S + O
delta.Y <- G - L
plot(delta.Y ~ D, type = "p")
E <- 1 - 1*D^2
M <- 1*D - 1*D^2 + 1
L <- E + M
S <- 1 + 1*D^2
O <- 1.5*D - 1.5*D^2 + 0
G <- S + O
delta.Y <- G - L
plot(delta.Y ~ D, type = "p")
abline(h = 0, lty = 3)
# Generate Range of Depths from 0 to 1 m
D <- runif(1000, min = 0, max = 1)
E <- 1 - 1*D^2
M <- 1*D - 1*D^2 + 1
S <- 1 + 1*D^2
O <- 1.5*D - 1.5*D^2 + 0
L <- E + M
G <- S + O
delta.Y <- G - L
plot(delta.Y ~ D, type = "p")
abline(h = 0, lty = 3)
# Generate Range of Depths from 0 to 1 m
D <- runif(100, min = 0, max = 1)
E <- 1 - 1*D^2
M <- 1*D - 1*D^2 + 1
S <- 1 + 1*D^2
O <- 1.5*D - 1.5*D^2 + 0
L <- E + M
G <- S + O
delta.Y <- G - L
plot(delta.Y ~ D, type = "p")
abline(h = 0, lty = 3)
# Define relationships between loss factors and depth
E <- 1 - 1*D^2
M <- 1*D - 1*D^2 + 1
plot(E ~ D)
# Define relationships between loss factors and depth
E <- 1 + 1*D^2
plot(E ~ D)
M <- 1*D - 1*D^2 + 1
plot(M ~ D)
# Define relationships between loss factors and depth
E <- 10 + 1*D^2
# plot the relationships
plot(E ~ D)
# Define relationships between loss factors and depth
E <- 0 + 1*D^2
M <- 1*D - 1*D^2 + 1
# plot the relationships
plot(E ~ D)
# Define the relationship between gain factors and depth
S <- 1 + 1*D^2
O <- 1.5*D - 1.5*D^2 + 0
# plot the relationships
plot(S ~ D)
plot(O ~ D)
# Generate Range of Depths from 0 to 1 m
D <- runif(100, min = 0, max = 1)
# Define relationships between loss factors and depth
E <- 1 + 1*D^2
M <- 1*D - 1*D^2 + 1
# plot the relationships
plot(E ~ D)
plot(M ~ D)
# Define the relationship between gain factors and depth
S <- 1 + 1*D^2
O <- 1.5*D - 1.5*D^2 + 0
# plot the relationships
plot(S ~ D)
plot(O ~ D)
# Combine factors into total loss and gain
L <- E + M
G <- S + O
# Calculate the change in marsh elevation based on the model
delta.Y <- G - L
plot(delta.Y ~ D, type = "p")
abline(h = 0, lty = 3)
# Define relationships between loss factors and depth
E <- 10 + 1*D^2
M <- 1*D - 1*D^2 + 1
# plot the relationships
plot(E ~ D)
plot(M ~ D)
# Define the relationship between gain factors and depth
S <- 1 + 1*D^2
O <- 1.5*D - 1.5*D^2 + 0
# plot the relationships
plot(S ~ D)
plot(O ~ D)
# Combine factors into total loss and gain
L <- E + M
G <- S + O
# Calculate the change in marsh elevation based on the model
delta.Y <- G - L
plot(delta.Y ~ D, type = "p")
# Define the relationship between gain factors and depth
S <- 10 + 1*D^2
O <- 1.5*D - 1.5*D^2 + 0
# plot the relationships
plot(S ~ D)
plot(O ~ D)
# Combine factors into total loss and gain
L <- E + M
G <- S + O
# Calculate the change in marsh elevation based on the model
delta.Y <- G - L
plot(delta.Y ~ D, type = "p")
abline(h = 0, lty = 3)
# Define the relationship between gain factors and depth
O <- 1.5*D - 1.5*D^2 + 0
S <- 1 + 1*D^2 + 1*O
# plot the relationships
plot(S ~ D)
plot(O ~ D)
# plot the relationships
plot(S ~ D)
S <- 1 + 1*D^2 + 0.5*O
points(S ~ D, col = 2)
S <- 1 + 1*D^2 + 0.1*O
points(S ~ D, col = 3)
# Generate Range of Depths from 0 to 1 m
D <- runif(100, min = 0, max = 1)
# Define relationships between loss factors and depth
E <- 1 + 1*D^2
M <- 1*D - 1*D^2 + 1
# plot the relationships
plot(E ~ D)
plot(M ~ D)
# Define the relationship between gain factors and depth
O <- 1.5*D - 1.5*D^2 + 0
S <- 1 + 1*D^2 + 0.1*O
# plot the relationships
plot(S ~ D)
plot(O ~ D)
# Combine factors into total loss and gain
L <- E + M
G <- S + O
# Calculate the change in marsh elevation based on the model
delta.Y <- G - L
plot(delta.Y ~ D, type = "p")
S <- 1 + 1*D^2 + 0.5*O
# plot the relationships
plot(S ~ D)
plot(O ~ D)
# Combine factors into total loss and gain
L <- E + M
G <- S + O
# Calculate the change in marsh elevation based on the model
delta.Y <- G - L
plot(delta.Y ~ D, type = "p")
S <- 10 + 1*D^2 + 0.5*O
# plot the relationships
plot(S ~ D)
plot(O ~ D)
# Combine factors into total loss and gain
L <- E + M
G <- S + O
# Calculate the change in marsh elevation based on the model
delta.Y <- G - L
plot(delta.Y ~ D, type = "p")
abline(h = 0, lty = 3)
S <- 5 + 1*D^2 + 0.5*O
# plot the relationships
plot(S ~ D)
plot(O ~ D)
# Combine factors into total loss and gain
L <- E + M
G <- S + O
# Calculate the change in marsh elevation based on the model
delta.Y <- G - L
plot(delta.Y ~ D, type = "p")
abline(h = 0, lty = 3)
# Generate Range of Depths from 0 to 1 m
D <- runif(100, min = 0, max = 2)
# Define relationships between loss factors and depth
E <- 1 + 1*D^2
M <- 1*D - 1*D^2 + 1
# plot the relationships
plot(E ~ D)
plot(M ~ D)
# Define the relationship between gain factors and depth
O <- 1.5*D - 1.5*D^2 + 0
S <- 5 + 1*D^2 + 0.5*O
# plot the relationships
plot(S ~ D)
plot(O ~ D)
# Combine factors into total loss and gain
L <- E + M
G <- S + O
# Calculate the change in marsh elevation based on the model
delta.Y <- G - L
plot(delta.Y ~ D, type = "p")
abline(h = 0, lty = 3)
# Generate Range of Depths from 0 to 1 m
D <- runif(100, min = 0, max = 2)
# Define relationships between loss factors and depth
E <- 1 + 1*D^2
M <- 1*D - 1*D^2 + 1
# plot the relationships
plot(E ~ D)
plot(M ~ D)
# Define the relationship between gain factors and depth
O <- 1*D - 1*D^2 + 0
S <- 1 + 1*D^2 + 0.5*O
# plot the relationships
plot(S ~ D)
plot(O ~ D)
# Combine factors into total loss and gain
L <- E + M
G <- S + O
# Calculate the change in marsh elevation based on the model
delta.Y <- G - L
plot(delta.Y ~ D, type = "p")
# Generate Range of Depths from 0 to 1 m
D <- runif(100, min = 0, max = 1)
# Define relationships between loss factors and depth
E <- 1 + 1*D^2
M <- 1*D - 1*D^2 + 1
# plot the relationships
plot(E ~ D)
plot(M ~ D)
# Define the relationship between gain factors and depth
O <- 1*D - 1*D^2 + 0
S <- 1 + 1*D^2 + 0.5*O
# plot the relationships
plot(S ~ D)
plot(O ~ D)
# Combine factors into total loss and gain
L <- E + M
G <- S + O
# Calculate the change in marsh elevation based on the model
delta.Y <- G - L
plot(delta.Y ~ D, type = "p")
# Generate Range of Depths from 0 to 1.5 m
D <- runif(100, min = 0, max = 1.5)
# Define relationships between loss factors and depth
E <- 1 + 1*D^2
M <- 1*D - 1*D^2 + 1
# plot the relationships
plot(E ~ D)
plot(M ~ D)
# Define the relationship between gain factors and depth
O <- 1*D - 1*D^2 + 0
S <- 1 + 1*D^2 + 0.5*O
# plot the relationships
plot(S ~ D)
plot(O ~ D)
# Combine factors into total loss and gain
L <- E + M
G <- S + O
# Calculate the change in marsh elevation based on the model
delta.Y <- G - L
plot(delta.Y ~ D, type = "p")
abline(h = 0, lty = 3)
# Define relationships between loss factors and depth
E <- 10 + 1*D^2 # erosion increases exponentially with depth
M <- 1*D - 1*D^2 + 1 # mineralization peaks at mid depth - this is the eq for a parabola
# plot the relationships
plot(E ~ D)
plot(M ~ D)
# Define the relationship between gain factors and depth
O <- 1*D - 1*D^2 + 0 # biomass production (O) peaks at mid depth - this is the eq for a parabola
S <- 1 + 1*D^2 + (0.5*O) # sedimentation increases exponentially with depth + the sediment caught by the organic matter
# plot the relationships
plot(O ~ D)
plot(S ~ D)
# Combine factors into total loss and gain
L <- E + M
G <- S + O
# Plot the losses and gains by depth
plot(L ~ D)
plot(G ~ D)
# Calculate the change in marsh elevation based on the model
delta.Y <- G - L
plot(delta.Y ~ D, ylim = c(-5, 5), type = "p")
abline(h = 0, lty = 3)
# Define relationships between loss factors and depth
E <- 0 + 1*D^2 # erosion increases exponentially with depth
M <- 1*D - 1*D^2 + 1 # mineralization peaks at mid depth - this is the eq for a parabola
# plot the relationships
plot(E ~ D)
plot(M ~ D)
# Define the relationship between gain factors and depth
O <- 1*D - 1*D^2 + 0 # biomass production (O) peaks at mid depth - this is the eq for a parabola
S <- 1 + 1*D^2 + (0.5*O) # sedimentation increases exponentially with depth + the sediment caught by the organic matter
# plot the relationships
plot(O ~ D)
plot(S ~ D)
# Combine factors into total loss and gain
L <- E + M
G <- S + O
# Plot the losses and gains by depth
plot(L ~ D)
plot(G ~ D)
# Calculate the change in marsh elevation based on the model
delta.Y <- G - L
plot(delta.Y ~ D, ylim = c(-5, 5), type = "p")
abline(h = 0, lty = 3)
# Define relationships between loss factors and depth
E <- 1 + 1*D^2 # erosion increases exponentially with depth
M <- 1*D - 1*D^2 + 1 # mineralization peaks at mid depth - this is the eq for a parabola
# plot the relationships
plot(E ~ D)
plot(M ~ D)
# Define the relationship between gain factors and depth
O <- 1*D - 1*D^2 + 0 # biomass production (O) peaks at mid depth - this is the eq for a parabola
S <- 1 + 1*D^2 + (0.5*O) # sedimentation increases exponentially with depth + the sediment caught by the organic matter
# plot the relationships
plot(O ~ D)
plot(S ~ D)
# Combine factors into total loss and gain
L <- E + M
G <- S + O
# Plot the losses and gains by depth
plot(L ~ D)
plot(G ~ D)
# Calculate the change in marsh elevation based on the model
delta.Y <- G - L
plot(delta.Y ~ D, ylim = c(-5, 5), type = "p")
abline(h = 0, lty = 3)
S <- 1 + 2*D^2 + (0.5*O) # sedimentation increases exponentially with depth + the sediment caught by the organic matter
# plot the relationships
plot(O ~ D)
plot(S ~ D)
# Combine factors into total loss and gain
L <- E + M
G <- S + O
# Plot the losses and gains by depth
plot(L ~ D)
plot(G ~ D)
# Calculate the change in marsh elevation based on the model
delta.Y <- G - L
plot(delta.Y ~ D, ylim = c(-5, 5), type = "p")
abline(h = 0, lty = 3)
plot(S ~ D)
S <- 1 + 1*D^2 + (0.5*O) # sedimentation increases exponentially with depth + the sediment caught by the organic matter
points(S ~ D, col = 3)
S <- 1 + 0.5*D^2 + (0.5*O) # sedimentation increases exponentially with depth + the sediment caught by the organic matter
points(S ~ D, col = 2)
S <- 1 + 3*D^2 + (0.5*O) # sedimentation increases exponentially with depth + the sediment caught by the organic matter
points(S ~ D, col = 5)
G <- S + O
plot(G ~ D)
plot(delta.Y ~ D, ylim = c(-5, 5), type = "p")
abline(h = 0, lty = 3)
S <- 3 + 3*D^2 + (0.5*O) # sedimentation increases exponentially with depth + the sediment caught by the organic matter
plot(S ~ D)
plot(G ~ D)
plot(delta.Y ~ D, ylim = c(-5, 5), type = "p")
abline(h = 0, lty = 3)
S <- 1 + 1*D^2 + (1*O) # sedimentation increases exponentially with depth + the sediment caught by the organic matter
# plot the relationships
plot(O ~ D)
plot(S ~ D)
G <- S + O
plot(G ~ D)
plot(delta.Y ~ D, ylim = c(-5, 5), type = "p")
abline(h = 0, lty = 3)
# Generate Range of Depths from 0 to 1.5 m
D <- runif(100, min = 0, max = 1.5)
# Define relationships between loss factors and depth
E <- 1 + 1*D^2 # erosion increases exponentially with depth
M <- 1*D - 1*D^2 + 1 # mineralization peaks at mid depth - this is the eq for a parabola
# Define the relationship between gain factors and depth
O <- 1*D - 1*D^2 + 0 # biomass production (O) peaks at mid depth - this is the eq for a parabola
S <- 1 + 1*D^2 + (1*O) # sedimentation increases exponentially with depth + the sediment caught by the organic matter
# Combine factors into total loss and gain
L <- E + M
G <- S + O
# Calculate the change in marsh elevation based on the model
delta.Y <- G - L
plot(delta.Y ~ D, ylim = c(-5, 5), type = "p")
abline(h = 0, lty = 3)
# Define the relationship between gain factors and depth
O <- 1.5*D - 1*D^2 + 0.5 # biomass production (O) peaks at mid depth - this is the eq for a parabola
# Combine factors into total loss and gain
L <- E + M
G <- S + O
# Calculate the change in marsh elevation based on the model
delta.Y <- G - L
plot(delta.Y ~ D, ylim = c(-5, 5), type = "p")
abline(h = 0, lty = 3)
# plot the relationships
plot(O ~ D)
plot(S ~ D)
points(S ~ D, col = 5)
# plot the relationships
plot(O ~ D)
plot(S ~ D)
plot(G ~ D)
S <- 1 + 1*D^2 + (1*O) # sedimentation increases exponentially with depth + the sediment caught by the organic matter
S <- 1 + 1*D^2 + (1*O) # sedimentation increases exponentially with depth + the sediment caught by the organic matter
plot(S ~ D)
S <- 1 + 1.5*D^2 + (1*O) # sedimentation increases exponentially with depth + the sediment caught by the organic matter
plot(S ~ D)
S <- 1 + 3*D^2 + (1*O) # sedimentation increases exponentially with depth + the sediment caught by the organic matter
plot(S ~ D)
S <- 5 + 3*D^2 + (1*O) # sedimentation increases exponentially with depth + the sediment caught by the organic matter
plot(S ~ D)
S <- 1 + 3*D^2 + (0.5*O) # sedimentation increases exponentially with depth + the sediment caught by the organic matter
plot(S ~ D)
S <- 1 + 8*D^2 + (0.5*O) # sedimentation increases exponentially with depth + the sediment caught by the organic matter
# plot the relationships
plot(O ~ D)
plot(S ~ D)
S <- 1 + 0*D^2 + (0.5*O) # sedimentation increases exponentially with depth + the sediment caught by the organic matter
plot(S ~ D)
S <- 1 + 0.5*D^2 + (0.5*O) # sedimentation increases exponentially with depth + the sediment caught by the organic matter
plot(S ~ D)
S <- 1 + 2*D^2 + (0.5*O) # sedimentation increases exponentially with depth + the sediment caught by the organic matter
# Define the relationship between gain factors and depth
O <- 1.5*D - 1*D^2 + 0.5 # biomass production (O) peaks at mid depth - this is the eq for a parabola
S <- 1 + 2*D^2 + (0.5*O) # sedimentation increases exponentially with depth + the sediment caught by the organic matter
G <- S + O
# Combine factors into total loss and gain
L <- E + M
G <- S + O
plot(G ~ D)
# Calculate the change in marsh elevation based on the model
delta.Y <- G - L
plot(delta.Y ~ D, ylim = c(-5, 5), type = "p")
abline(h = 0, lty = 3)
S <- 1 + 1*D^2 + (0.5*O) # sedimentation increases exponentially with depth + the sediment caught by the organic matter
G <- S + O
# Calculate the change in marsh elevation based on the model
delta.Y <- G - L
plot(delta.Y ~ D, ylim = c(-5, 5), type = "p")
abline(h = 0, lty = 3)
plot(S ~ D)
setwd("~/current_research/crayfish_leaf_decom/lab_notebook")
library("tidyverse") # for data analysis and ggplot graphing
#library("ggpubr") # for plot creation and saving
library("lme4") # permits linear mixed model construction
library("lmerTest") # calculates p-values from linear mixed models
library("tidyverse") # for data analysis and ggplot graphing
#library("ggpubr") # for plot creation and saving
library("lme4") # permits linear mixed model construction
library("lmerTest") # calculates p-values from linear mixed models
install.packages("lme4")
install.packages("lme4")
install.packages("lme4")
install.packages("lme4")
#library("ggpubr") # for plot creation and saving
library("lme4") # permits linear mixed model construction
library("lmerTest") # calculates p-values from linear mixed models
library("tidyverse") # for data analysis and ggplot graphing
?lmerTest
??lmerTest
library("lmerTest") # calculates p-values from linear mixed models
install.packages("lmerTest")
install.packages("lmerTest")
library("lmerTest") # calculates p-values from linear mixed models
install.packages("lme4")
#library("ggpubr") # for plot creation and saving
library("lme4") # permits linear mixed model construction
