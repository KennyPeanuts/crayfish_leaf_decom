r <- 1
alpha <- 0.2
d <- 0.5
beta <- 0.002
P.hat <- r / alpha
V.hat <- d / beta
plot(1:500, 1:10, type = "n")
plot(1:300, 1:300, type = "n")
plot(1:300, 1:300, xlim = c(0, 10), type = "n")
abline(h = V.hat, col = "blue")
plot(1:500, 1:500, xlim = c(0, 10), type = "n")
abline(h = V.hat, col = "blue")
abline(h = P.hat, col = "red")
abline(v = V.hat, col = "blue")
abline(v = V.hat, col = "blue")
plot(1:500, 1:500, ylim = c(0, 10), type = "n")
abline(v = V.hat, col = "blue")
abline(h = P.hat, col = "red")
plot(1:500, 1:500, ylim = c(0, 10), type = "n", ylab = "P", xlab = "V")
abline(v = V.hat, col = "blue")
abline(h = P.hat, col = "red")
alpha <- c(0.2, 0.3, 0.4, 0.5)
abline(h = P.hat, col = "red")
P.hat <- r / alpha
abline(h = P.hat, col = "red")
alpha <- c(0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1)
P.hat <- r / alpha
abline(h = P.hat, col = "red")
beta <- c(0.002, 0.003, 0.004, 0.005, 0.006, 0.007, 0.008, 0.009. 0.01)
alpha <- 0.2 #c(0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1)
d <- 0.5
beta <- c(0.002, 0.003, 0.004, 0.005, 0.006, 0.007, 0.008, 0.009, 0.01)
P.hat <- r / alpha
V.hat <- d / beta
plot(1:500, 1:500, ylim = c(0, 10), type = "n", ylab = "P", xlab = "V")
abline(v = V.hat, col = "blue")
abline(h = P.hat, col = "red")
r <- 1:10
alpha <- 0.2 #c(0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1)
d <- 0.5
beta <- 0.002 #c(0.002, 0.003, 0.004, 0.005, 0.006, 0.007, 0.008, 0.009, 0.01)
P.hat <- r / alpha
V.hat <- d / beta
plot(1:500, 1:500, ylim = c(0, 10), type = "n", ylab = "P", xlab = "V")
abline(v = V.hat, col = "blue")
abline(h = P.hat, col = "red")
r <- c(1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2)
alpha <- 0.2 #c(0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1)
d <- 0.5
beta <- 0.002 #c(0.002, 0.003, 0.004, 0.005, 0.006, 0.007, 0.008, 0.009, 0.01)
P.hat <- r / alpha
V.hat <- d / beta
plot(1:500, 1:500, ylim = c(0, 10), type = "n", ylab = "P", xlab = "V")
abline(v = V.hat, col = "blue")
abline(h = P.hat, col = "red")
d <- c(0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.5)
r <- 1 #c(1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2)
alpha <- 0.2 #c(0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1)
d <- c(0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.5)
beta <- 0.002 #c(0.002, 0.003, 0.004, 0.005, 0.006, 0.007, 0.008, 0.009, 0.01)
P.hat <- r / alpha
V.hat <- d / beta
plot(1:500, 1:500, ylim = c(0, 10), type = "n", ylab = "P", xlab = "V")
abline(v = V.hat, col = "blue")
abline(h = P.hat, col = "red")
squirrel.N <- c(1000, 1200, 980, 1100, 900, 1800, 2200, 2500, 2400, 2600)
year <- 1:10
squirrel.N <- c(1000, 1200, 980, 1100, 900, 1800, 2200, 2500, 2400, 2600)
plot(squirrel.N ~ year, type = "b")
squirrel.N <- c(1000, 1200, 980, 1100, 1200, 1800, 2200, 2500, 2400, 2600)
plot(squirrel.N ~ year, type = "b")
squirrel.N <- c(1000, 1200, 980, 1100, 1700, 1800, 2200, 2500, 2400, 2600)
plot(squirrel.N ~ year, type = "b")
squirrel.N <- c(1000, 1200, 980, 1100, 1900, 2000, 2200, 2500, 2400, 2600)
plot(squirrel.N ~ year, type = "b")
squirrel.N <- c(1000, 1200, 980, 1100, 1900, 2000, 2200, 1900, 2000, 1950)
plot(squirrel.N ~ year, type = "b")
squirrel.N <- c(1000, 1200, 980, 1100, 1200, 2000, 2200, 1900, 2000, 1950)
plot(squirrel.N ~ year, type = "b")
plot(squirrel.N ~ year, type = "b", ylim = c(0, 2500))
squirrel.N <- c(1000, 1200, 980, 1100, 1200, 2400, 2200, 2500, 2300, 2400)
plot(squirrel.N ~ year, type = "b", ylim = c(0, 2500))
plot(squirrel.N ~ year, type = "b", ylim = c(0, 2500), ylab = "Squirrel N")
site <- A:M
site <- c(A:M)
site <- LETTERS(A:M)
site <- LETTERS(1:10)
site <- LETTER(1:10)
site <- LETTERS(1:10)
site <- LETTERS
site <- LETTERS[1:10]
count <- 1:10
plot(count ~ site)
plot(count ~ as.factor(site))
plot(count ~ as.numeric(site))
as.numeric(site)
as.numeric(as.factor(site))
plot(count ~ as.numeric(as.factor(site))
plot(count ~ as.numeric(as.factor(site)))
plot(count ~ as.numeric(as.factor(site)))
plot(count ~ as.numeric(as.factor(site)), type = "h")
plot(count ~ as.numeric(as.factor(site)), type = "h", lwd = 6)
plot(count ~ as.numeric(as.factor(site)), type = "h", lwd = 10)
plot(count ~ as.numeric(as.factor(site)), type = "h", lwd = 10, axes = F)
axis(2)
axis(1, at = c(1:10), site)
box()
plot(count ~ as.numeric(as.factor(site)), type = "h", lwd = 10, ylab = "Number of Responses", xlab = "Site", axes = F)
axis(2)
axis(1, at = c(1:10), site)
box()
setwd("~/current_research/crayfish_leaf_decom/lab_notebook")
library("tidyverse") # for data analysis and ggplot graphing
#library("ggpubr") # for plot creation and saving
library("lme4") # permits linear mixed model construction
library("lmerTest") # calculates p-values from linear mixed models
cray.raw <- read.table("./data/crayfish_mass_raw.csv", header = T, sep = ",")
mean.mass <- cray.raw %>%
group_by(Year, Type, Tank) %>%
summarize(mean.Stocked.Mass = mean(Stocked_Mass, na.rm = T), sd.Stocked.Mass = sd(Stocked_Mass), mean.Harvested.Mass = mean(Harvested_Mass, na.rm = T), sd.Harvested.Mass = sd(Harvested_Mass), total.Harvested.Mass = sum(Harvested_Mass, na.rm = T))
tank.abundance <- cray.raw %>%
group_by(Year, Type, Tank) %>%
summarize(Abundance = unique(Abundance), Total.Abundance = unique(Total_Abundance), Invasive.Abundance = unique(Invasive_Abundance))
tank.treatment <- cray.raw %>%
group_by(Year, Type, Tank) %>%
summarize(Treatment = unique(Treatment))
cray.mean <-
left_join(mean.mass, tank.abundance)
cray.mean <-
left_join(cray.mean, tank.treatment)
cray.N <-
cray.raw %>%
group_by(Year, Type, Tank) %>%
summarize(N.initial = length(which(!is.na(Stocked_Mass))), N.final = length(which(!is.na(Harvested_Mass))))
prop.surv <- cray.N$N.final / cray.N$N.initial
cray.N <- data.frame(cray.N, prop.surv)
cray.N <-
left_join(cray.N, tank.abundance)
cray.N <-
left_join(cray.N, tank.treatment)
ind.delta.mass <- cray.mean$mean.Harvested.Mass - cray.mean$mean.Stocked.Mass
cray.mean <- data.frame(cray.mean, ind.delta.mass)
cray.mean$Treatment <- factor(cray.mean$Treatment, levels = c("Ctl_Native", "Ctl_Invasive", "Low", "Equal", "High"))
cray.mean %>%
group_by(Year, Type) %>%
summarize(mean.stocked = mean(mean.Stocked.Mass), sd.stocked = sd(mean.Stocked.Mass), min.stocked = min(mean.Stocked.Mass), max.stocked = max(mean.Stocked.Mass), N = length(mean.Stocked.Mass))
cray.mean %>%
group_by(Year, Type) %>%
summarize(mean.harvested = mean(mean.Harvested.Mass, na.rm = T), sd.harvested = sd(mean.Harvested.Mass, na.rm = T), min.harvested = min(mean.Harvested.Mass, na.rm = T), max.harvested = max(mean.Harvested.Mass, na.rm = T), N = length(mean.Harvested.Mass))
>
##################################################
#### Survival
cray.N %>%
group_by(Year, Type) %>%
summarize(mean.prop.surv = mean(prop.surv, na.rm = T), sd.prop.surv = sd(prop.surv, na.rm = T), min.prop.surv = min(prop.surv, na.rm = T), max.prop.surv = max(prop.surv, na.rm = T), N = length(prop.surv))
(delta.mass.tot.abundance.mod.2015 <- lmer(ind.delta.mass ~ 1 + Total.Abundance * Type + (1|Tank) , data = cray.mean, subset = Year == "2015"))
ggplot(subset(cray.mean, Year == "2015"), mapping = aes(y = ind.delta.mass, x = Total.Abundance, color = Type)) +
geom_point(
jitter.width = 0.1
) +
geom_smooth(
method = "lm"
) +
theme_classic()
ggplot(subset(cray.mean, Year == "2015"), mapping = aes(y = ind.delta.mass, x = Total.Abundance, color = Type)) +
geom_point(
position = position_jitterdodge(
jitter.width = 0.1
)
) +
geom_smooth(
method = "lm"
) +
theme_classic()
ggplot(subset(cray.mean, Year == "2015"), mapping = aes(y = ind.delta.mass, x = Invasive.Abundance, color = Type)) +
geom_point(
position = position_jitterdodge(
jitter.width = 0.1
)
) +
geom_smooth(
method = "lm"
) +
theme_classic()
ggplot(subset(cray.mean, Year == "2015"), mapping = aes(y = ind.delta.mass, x = Total.Abundance, color = Type)) +
geom_point(
position = position_jitterdodge(
jitter.width = 0.1
)
) +
geom_smooth(
method = "lm"
) +
theme_classic()
ggplot(subset(cray.mean, Year == "2015"), mapping = aes(y = ind.delta.mass, x = Total.Abundance, color = Type)) +
geom_point(
#position = position_jitterdodge(
#jitter.width = 0.1
#)
) +
geom_smooth(
method = "lm"
) +
theme_classic()
ggplot(subset(cray.mean, Year == "2015"), mapping = aes(y = ind.delta.mass, x = Total.Abundance, color = Type)) +
geom_jitter(
#geom_point(
#position = position_jitterdodge(
#jitter.width = 0.1
#)
) +
geom_smooth(
method = "lm"
) +
theme_classic()
ggplot(subset(cray.mean, Year == "2015"), mapping = aes(y = ind.delta.mass, x = Total.Abundance, color = Type)) +
geom_jitter(
jitter.width = 0.1
) +
geom_smooth(
method = "lm"
) +
theme_classic()
ggplot(subset(cray.mean, Year == "2015"), mapping = aes(y = ind.delta.mass, x = Total.Abundance, color = Type)) +
geom_jitter(
jitter.width = 0.01
) +
geom_smooth(
method = "lm"
) +
theme_classic()
ggplot(subset(cray.mean, Year == "2015"), mapping = aes(y = ind.delta.mass, x = Total.Abundance, color = Type)) +
geom_jitter(
width = 0.01
) +
geom_smooth(
method = "lm"
) +
theme_classic()
ggplot(subset(cray.mean, Year == "2015"), mapping = aes(y = ind.delta.mass, x = Total.Abundance, color = Type)) +
geom_jitter(
width = 0.1
) +
geom_smooth(
method = "lm"
) +
theme_classic()
ggsave(filename = "prop.surv.by.abundance.2015.jpg", path = "./output/plots", dpi = 300)
ggplot(subset(cray.N, Year == "2015"), mapping = aes(y = prop.surv, x = Total.Abundance, color = Type)) +
geom_jitter(
width = 0.1
) +
geom_smooth(
method = "lm"
) +
theme_classic()
ggplot(subset(cray.N, Year == "2015"), mapping = aes(y = prop.surv, x = Total.Abundance, color = Type)) +
geom_point()+
geom_smooth(
method = "lm"
) +
theme_classic()
jitter.width = 0.1
ggplot(subset(cray.N, Year == "2015"), mapping = aes(y = prop.surv, x = Total.Abundance, color = Type)) +
)))))
ggplot(subset(cray.N, Year == "2015"), mapping = aes(y = prop.surv, x = Total.Abundance, color = Type)) +
geom_point(
position = position_dodge(
jitter.width = 0.1
)
)+
geom_smooth(
method = "lm"
) +
theme_classic()
ggplot(subset(cray.N, Year == "2015"), mapping = aes(y = prop.surv, x = Total.Abundance, color = Type)) +
geom_point(
position = position_jitterdodge(
jitter.width = 0.1
)
)+
geom_smooth(
method = "lm"
) +
theme_classic()
ggplot(subset(cray.N, Year == "2015"), mapping = aes(y = prop.surv, x = Total.Abundance, color = Type)) +
geom_point(
position = position_jitterdodge(
dodge.width = 0.1,
jitter.width = 0.1
)
)+
geom_smooth(
method = "lm"
) +
theme_classic()
ggplot(subset(cray.N, Year == "2015"), mapping = aes(y = prop.surv, x = Total.Abundance, color = Type)) +
geom_point(
position = position_jitterdodge(
dodge.width = 0.1,
jitter.width = 0.2
)
)+
geom_smooth(
method = "lm"
) +
theme_classic()
ggsave(filename = "prop.surv.by.abundance.2015.jpg", path = "./output/plots", dpi = 300)
ggplot(subset(cray.mean, Year == "2015"), mapping = aes(y = ind.delta.mass, x = Total.Abundance, color = Type)) +
geom_point(
position = position_jitterdodge(
dodge.width = 0.1,
jitter.width = 0.2
)
)+
geom_smooth(
method = "lm"
) +
theme_classic()
ggsave(filename = "ind_delta_mass_by_abundance_2015.jpg", path = "./output/plots", dpi = 300)
ggplot(subset(cray.mean, Year == "2016"), mapping = aes(y = ind.delta.mass, x = Total.Abundance, color = Type)) +
geom_point(
position = position_jitterdodge(
dodge.width = 0.1,
jitter.width = 0.2
)
)+
geom_smooth(
method = "lm"
) +
theme_classic()
ggsave(filename = "ind_delta_mass_by_abundance_2016.jpg", path = "./output/plots", dpi = 300)
ggplot(subset(cray.N, Year == "2016"), mapping = aes(y = prop.surv, x = Total.Abundance, color = Type)) +
geom_point(
position = position_jitterdodge(
dodge.width = 0.1,
jitter.width = 0.2
)
)+
geom_smooth(
method = "lm"
) +
theme_classic()
ggplot(subset(cray.N, Year == "2016"), mapping = aes(y = prop.surv, x = Total.Abundance, color = Type)) +
geom_point(
position = position_jitterdodge(
dodge.width = 0.1,
jitter.width = 0.3
)
)+
geom_smooth(
method = "lm"
) +
theme_classic()
ggsave(filename = "prop.surv.by.abundance.2016.jpg", path = "./output/plots", dpi = 300)
