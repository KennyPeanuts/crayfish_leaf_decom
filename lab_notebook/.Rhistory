setwd("~/current_research/crayfish_leaf_decom/lab_notebook")
leaf.initial <- read.table("./data/initial_leaf_mass.csv", header = T, sep = ",")
leaf.T1 <- read.table("./data/T1_leaf_mass.csv", header = T, sep = ",")
leaf.T2 <- read.table("./data/T2_leaf_mass.csv", header = T, sep = ",")
leaf.T3 <- read.table("./data/T3_leaf_mass.csv", header = T, sep = ",")
treat <- read.table("./data/tank_map.csv", header = T, sep = ",")
#### Merge treatment information
leaf.T1 <- merge(leaf.T1, treat, by.x = "BagTank", by.y = "tank")
leaf.T2 <- merge(leaf.T2, treat, by.x = "BagTank", by.y = "tank")
leaf.T3 <- merge(leaf.T3, treat, by.x = "BagTank", by.y = "tank")
### Calculate variables
#### Initial AFDM
initialDM <- leaf.initial$CrucLeafDM - leaf.initial$CrucMass
initialAM <- leaf.initial$CrucAM - leaf.initial$CrucMas
AFDM <- initialDM - initialAM
leaf.initial <- data.frame(leaf.initial, AFDM)
mean.initial.AFDM <- mean(AFDM)
#### T1 AFDM
T1DM <- leaf.T1$CrucLeafDM - leaf.T1$CrucMass
T1AM <- leaf.T1$CrucAM - leaf.T1$CrucMass
AFDM <- T1DM - T1AM
leaf.T1 <- data.frame(leaf.T1, AFDM)
#### T2 AFDM
T2DM <- leaf.T2$CrucLeafDM - leaf.T2$CrucMass
T2AM <- leaf.T2$CrucAM - leaf.T2$CrucMass
AFDM <- T2DM - T2AM
leaf.T2 <- data.frame(leaf.T2, AFDM)
#### T3 AFDM
T3DM <- leaf.T3$CrucLeafDM - leaf.T3$CrucMass
T3AM <- leaf.T3$CrucAM - leaf.T3$CrucMass
AFDM <- T3DM - T3AM
leaf.T3 <- data.frame(leaf.T3, AFDM)
### Analyze Mass Lost with time
#### Remove tanks with C. longulus in them
leaf.AFDM.raw <- rbind(leaf.T1, leaf.T2, leaf.T3)
# remove tanks 3 and 4 from the dataset
leaf.AFDM <- leaf.AFDM.raw[leaf.AFDM.raw$BagTank != 3 & leaf.AFDM.raw$BagTank != 4,]
percAFDM.rem <- (leaf.AFDM$AFDM / mean.initial.AFDM) * 100
days.elapsed <- as.Date(leaf.AFDM$Date) - as.Date(leaf.initial$Date)
days.elapsed <- as.numeric(days.elapsed)
leaf.AFDM <- data.frame(leaf.AFDM, percAFDM.rem, days.elapsed)
k.tank <- function() {
k <- numeric(0)
treat <- character(0)
tank_name = unique(leaf.AFDM$BagTank)
index = seq_along(tank)
for(i in index) {
treat[i] <- as.character(leaf.AFDM$treatment[index == i])[1]
k[i] <- coef(summary(lm(log(leaf.AFDM$percAFDM.rem + 1)[index == i] ~ leaf.AFDM$days.elapsed[index == i])))[2, 1] # this extracts the slope (col 2, row 1) from the matrix of coefficents produced by the lm
}
data.frame(tank_name, treat, k)
}
# run the function
k.list <- k.tank()
days.elapsed <- as.Date(leaf.AFDM$Date) - as.Date(leaf.initial$Date)
leaf.iniital$Date
leaf.initial$Date
leaf.AFDM$Date
days.elapsed <- as.Date(leaf.AFDM$Date) - as.Date(unique(leaf.initial$Date))
days.elapsed <- as.numeric(days.elapsed)
days.elapsed
leaf.AFDM <- data.frame(leaf.AFDM, percAFDM.rem, days.elapsed)
##### Function designation
k.tank <- function() {
k <- numeric(0)
treat <- character(0)
tank_name = unique(leaf.AFDM$BagTank)
index = seq_along(tank)
for(i in index) {
treat[i] <- as.character(leaf.AFDM$treatment[index == i])[1]
k[i] <- coef(summary(lm(log(leaf.AFDM$percAFDM.rem + 1)[index == i] ~ leaf.AFDM$days.elapsed[index == i])))[2, 1] # this extracts the slope (col 2, row 1) from the matrix of coefficents produced by the lm
}
data.frame(tank_name, treat, k)
}
# run the function
k.list <- k.tank()
k.tank <- function() {
k <- numeric(0)
##### Function designation
k.tank <- function() {
k <- numeric(0)
treat <- character(0)
tank_name = unique(leaf.AFDM$BagTank)
index = seq_along(tank_name)
for(i in index) {
treat[i] <- as.character(leaf.AFDM$treatment[index == i])[1]
k[i] <- coef(summary(lm(log(leaf.AFDM$percAFDM.rem + 1)[index == i] ~ leaf.AFDM$days.elapsed[index == i])))[2, 1] # this extracts the slope (col 2, row 1) from the matrix of coefficents produced by the lm
}
data.frame(tank_name, treat, k)
}
# run the function
k.list <- k.tank()
)
k.list <- k.tank()
leaf.initial <- read.table("./data/initial_leaf_mass.csv", header = T, sep = ",")
leaf.T1 <- read.table("./data/T1_leaf_mass.csv", header = T, sep = ",")
leaf.T2 <- read.table("./data/T2_leaf_mass.csv", header = T, sep = ",")
leaf.T3 <- read.table("./data/T3_leaf_mass.csv", header = T, sep = ",")
treat <- read.table("./data/tank_map.csv", header = T, sep = ",")
#### Merge treatment information
leaf.T1 <- merge(leaf.T1, treat, by.x = "BagTank", by.y = "tank")
leaf.T2 <- merge(leaf.T2, treat, by.x = "BagTank", by.y = "tank")
leaf.T3 <- merge(leaf.T3, treat, by.x = "BagTank", by.y = "tank")
### Calculate variables
#### Initial AFDM
initialDM <- leaf.initial$CrucLeafDM - leaf.initial$CrucMass
initialAM <- leaf.initial$CrucAM - leaf.initial$CrucMas
AFDM <- initialDM - initialAM
leaf.initial <- data.frame(leaf.initial, AFDM)
mean.initial.AFDM <- mean(AFDM)
#### T1 AFDM
T1DM <- leaf.T1$CrucLeafDM - leaf.T1$CrucMass
T1AM <- leaf.T1$CrucAM - leaf.T1$CrucMass
AFDM <- T1DM - T1AM
leaf.T1 <- data.frame(leaf.T1, AFDM)
#### T2 AFDM
T2DM <- leaf.T2$CrucLeafDM - leaf.T2$CrucMass
T2AM <- leaf.T2$CrucAM - leaf.T2$CrucMass
AFDM <- T2DM - T2AM
leaf.T2 <- data.frame(leaf.T2, AFDM)
#### T3 AFDM
T3DM <- leaf.T3$CrucLeafDM - leaf.T3$CrucMass
T3AM <- leaf.T3$CrucAM - leaf.T3$CrucMass
AFDM <- T3DM - T3AM
leaf.T3 <- data.frame(leaf.T3, AFDM)
### Analyze Mass Lost with time
#### Remove tanks with C. longulus in them
# create a single data frame with the T1 - T3 AFDM
leaf.AFDM.raw <- rbind(leaf.T1, leaf.T2, leaf.T3)
# remove tanks 3 and 4 from the dataset
leaf.AFDM <- leaf.AFDM.raw[leaf.AFDM.raw$BagTank != 3 & leaf.AFDM.raw$BagTank != 4,]
# convert to percent remaining in the tank
percAFDM.rem <- (leaf.AFDM$AFDM / mean.initial.AFDM) * 100
# calculate the time in the tank
#date <- c(as.Date(leaf.T1$Date), as.Date(leaf.T2$Date), as.Date(leaf.T3$Date))
#time.step <- c(rep("T1", 30), rep("T2", 30), rep("T3", 30))
# calculate the number of days elapsed
days.elapsed <- as.Date(leaf.AFDM$Date) - as.Date(unique(leaf.initial$Date))
days.elapsed <- as.numeric(days.elapsed)
# add calc variables to data frame
leaf.AFDM <- data.frame(leaf.AFDM, percAFDM.rem, days.elapsed)
### Calculate K for each tank
#### Create a function that calculates k for each tank
The function below, runs a linear model on the natural log of the percent leaf mass remaining by the number of days in the tank.  The function then extracts only the slope of the line and makes a data frame that matches the slope, tank number, treatment, and block.
##### Function designation
k.tank <- function() {
k <- numeric(0)
treat <- character(0)
tank_name = unique(leaf.AFDM$BagTank)
index = seq_along(tank_name)
for(i in index) {
treat[i] <- as.character(leaf.AFDM$treatment[index == i])[1]
k[i] <- coef(summary(lm(log(leaf.AFDM$percAFDM.rem + 1)[index == i] ~ leaf.AFDM$days.elapsed[index == i])))[2, 1] # this extracts the slope (col 2, row 1) from the matrix of coefficents produced by the lm
}
data.frame(tank_name, treat, k)
}
# run the function
k.list <- k.tank()
k.list
tapply(k.list$k, k.list$treat, summary)
tapply(k.list$k, k.list$treat, sd)
anova(lm(k ~ treat, data = k.list))
plot(k ~ treat, data = k.list, ylim = c(-0.3, 0), col = "wheat", ylab = "k (1/day)", xlab = "Treatment")
dev.copy(jpeg, "./output/plots/k_by_treat.jpg")
dev.off()
x <- factor(k.list$treat, levels=c("N", "I", "L", "E", "H"))
plot(k ~ x, data = k.list, ylim = c(-0.3, 0), col = "wheat", ylab = "k (1/day)", xlab = "Treatment")
par(las = 1)
x <- factor(k.list$treat, levels=c("N", "I", "L", "E", "H"))
plot(k ~ x, data = k.list, ylim = c(-0.3, 0), col = "wheat", ylab = "k (1/day)", xlab = "Treatment")
dev.copy(jpeg, "./output/plots/k_by_treat.jpg")
t.test(k.list$k[k.list$treat == "N"], k.list$k[k.list$treat == "I"])
par(las = 1, mar = c(4, 5, 2, 2))
plot(percAFDM.rem ~ jitter(as.numeric(days.elapsed), 1), data = leaf.AFDM, subset = treatment == "N", xlim = c(0, 30), ylim = c(0, 100), pch = 1, xlab = "Days in Tank", ylab = "Percent Initial Leaf Mass Remaining")
points(percAFDM.rem ~ jitter(as.numeric(days.elapsed), 1), data = leaf.AFDM, subset = treatment == "I", pch = 19, col = "gray40")
points(percAFDM.rem ~ jitter(as.numeric(days.elapsed), 1), data = leaf.AFDM, subset = treatment == "E", pch = 19, col = "deepskyblue")
points(percAFDM.rem ~ jitter(as.numeric(days.elapsed), 1), data = leaf.AFDM, subset = treatment == "H", pch = 19, col = "blue3")
points(percAFDM.rem ~ jitter(as.numeric(days.elapsed), 1), data = leaf.AFDM, subset = treatment == "L", pch = 19, col = "cadetblue2")
legend(0, 40, c("Native Only  ", "Invasive Only  ", "Low Invasive  ", "Equal  ", "High Invasive  "), pch = c(1, 19, 19, 19, 19, 19), col = c(1, "gray40", "cadetblue2", "deepskyblue", "blue3"), cex = 0.9)
dev.copy(jpeg, "./output/plots/percMassRem_by_treat_days.jpg")
dev.off()
par(las = 1, mar = c(4, 5, 2, 2))
plot(percAFDM.rem ~ jitter(as.numeric(days.elapsed), 1), data = leaf.AFDM, subset = treatment == "N", xlim = c(0, 30), ylim = c(0, 100), pch = 1, xlab = "Days in Tank", ylab = "Percent Initial Leaf Mass Remaining")
points(percAFDM.rem ~ jitter(as.numeric(days.elapsed), 1), data = leaf.AFDM, subset = treatment == "I", pch = 19, col = "gray40")
points(percAFDM.rem ~ jitter(as.numeric(days.elapsed), 1), data = leaf.AFDM, subset = treatment == "E", pch = 19, col = "deepskyblue")
points(percAFDM.rem ~ jitter(as.numeric(days.elapsed), 1), data = leaf.AFDM, subset = treatment == "H", pch = 19, col = "blue3")
points(percAFDM.rem ~ jitter(as.numeric(days.elapsed), 1), data = leaf.AFDM, subset = treatment == "L", pch = 19, col = "cadetblue2")
legend(0, 40, c("Native Only  ", "Invasive Only  ", "Low Invasive  ", "Equal  ", "High Invasive  "), pch = c(1, 19, 19, 19, 19, 19), col = c(1, "gray40", "cadetblue2", "deepskyblue", "blue3"), cex = 0.9)
dev.copy(jpeg, "./output/plots/percMassRem_by_treat_days.jpg")
dev.off()
coef(summary(lm(log(leaf.AFDM$percAFDM.rem + 1)[leaf.AFDM$treatmen == "N"] ~ leaf.AFDM$days.elapsed[leaf.AFDM$treatment == "N"])))[2, 1]
N.k <- lm(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "N")
summary(N.k)
plot(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "N")
abline(N.k)
I.k <- lm(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "I")
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "I")
abline(I.k)
plot(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "N")
abline(N.k)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "I", pch = 2)
abline(I.k)
min(log(leaf.AFDM$percAFDM.rem + 1))
max(log(leaf.AFDM$percAFDM.rem + 1))
plot(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "N", ylim = c(0, 5))
abline(N.k)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "I", pch = 2)
abline(I.k)
L.k <- lm(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "L")
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "L", pch = 3)
abline(L.k)
E.k <- lm(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "E")
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "E", pch = 4)
abline(E.k)
H.k <- lm(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "H")
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "H", pch = 5)
abline(H.k)
plot(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "N", ylim = c(0, 5))
abline(N.k)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "I", pch = 2)
abline(I.k, lty = 2)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "L", pch = 3)
abline(L.k, lty = 3)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "E", pch = 4)
abline(E.k, lty = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "H", pch = 5)
abline(H.k, lty = 5)
par(las = 1, cex = 2)
plot(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "N", ylim = c(0, 5))
abline(N.k)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "I", pch = 2)
abline(I.k, lty = 2)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "L", pch = 3)
abline(L.k, lty = 3)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "E", pch = 4)
abline(E.k, lty = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "H", pch = 5)
abline(H.k, lty = 5)
par(las = 1, cex = 1)
plot(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "N", ylim = c(0, 5))
abline(N.k, lty = 1, lwd = 2)
abline(N.k, lty = 1, lwd = 4)
par(las = 1, cex = 1)
plot(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "N", ylim = c(0, 5), col = "gray")
abline(N.k, lty = 1, lwd = 4)
par(las = 1, cex = 1)
plot(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "N", ylim = c(0, 5), col = "gray50")
abline(N.k, lty = 1, lwd = 4)
par(las = 1, cex = 1)
plot(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "N", ylim = c(0, 5), col = "gray40")
par(las = 1, cex = 1)
plot(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "N", ylim = c(0, 5), col = "gray40")
abline(N.k, lty = 1, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "I", pch = 2, col )
abline(I.k, lty = 2)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "L", pch = 3)
abline(L.k, lty = 3)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "E", pch = 4)
abline(E.k, lty = 4)
par(las = 1, cex = 1)
plot(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "N", ylim = c(0, 5), col = "gray40")
plot(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "N", ylim = c(0, 5), col = "gray")
plot(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "N", ylim = c(0, 5), col = "gray")
par(las = 1, cex = 1)
plot(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "N", ylim = c(0, 5), col = "gray")
dev.off()
par(las = 1, cex = 1)
plot(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "N", ylim = c(0, 5), col = "gray")
par(las = 1, cex = 1)
plot(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "N", ylim = c(0, 5), col = "gray40")
par(las = 1, cex = 1)
plot(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "N", ylim = c(0, 5), col = "gray50")
par(las = 1, cex = 1)
plot(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "N", ylim = c(0, 5), col = "gray30")
abline(N.k, lty = 1, lwd = 4)
par(las = 1, cex = 1)
plot(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "N", ylim = c(0, 5), col = "gray40")
plot(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "N", ylim = c(0, 5), pch = 25, col = "gray40")
plot(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "N", ylim = c(0, 5), pch = "*", col = "gray40")
plot(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "N", ylim = c(0, 5), pch = "N", col = "gray40")
plot(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "N", ylim = c(0, 5), pch = 8, col = "gray40")
abline(N.k, lty = 1, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "I", pch = 3, col = "gray40" )
abline(I.k, lty = 2)
abline(I.k, lty = 2, lwd = 4)
par(las = 1, cex = 1)
plot(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "N", ylim = c(0, 5), pch = 8, col = "gray40")
abline(N.k, lty = 1, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "I", pch = 3, col = "gray40" )
abline(I.k, lty = 2, lwd = 4)
par(las = 1, cex = 1)
plot(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "N", xlim = c(0, 25), ylim = c(0, 5), pch = 8, col = "gray40")
abline(N.k, lty = 1, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "I", pch = 3, col = "gray40" )
abline(I.k, lty = 2, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "L", pch = 2, col = "gray40")
abline(L.k, lty = 3, lwd = 4)
par(las = 1, cex = 1)
plot(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "N", xlim = c(0, 25), ylim = c(0, 5), pch = 8, col = "gray40")
abline(N.k, lty = 1, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "I", pch = 3, col = "gray40" )
abline(I.k, lty = 2, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "L", pch = 6, col = "gray40")
abline(L.k, lty = 3, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "E", pch = 5, col = "gray40")
abline(E.k, lty = 4, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "H", pch = 4, col = "gray40")
abline(H.k, lty = 5, lwd = 4)
legend(0, 3, c("Native Only", "Invasive Only", "Low Invasive", "Equal Invasive", "High Invasive"), pch = c(8, 3, 6, 5, 4), lty = c(1, 2, 3, 4, 5))
legend(0, 2, c("Native Only", "Invasive Only", "Low Invasive", "Equal Invasive", "High Invasive"), pch = c(8, 3, 6, 5, 4), lty = c(1, 2, 3, 4, 5))
par(las = 1, cex = 1)
plot(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "N", xlim = c(0, 25), ylim = c(0, 5), pch = 8, col = "gray40")
abline(N.k, lty = 1, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "I", pch = 3, col = "gray40" )
abline(I.k, lty = 2, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "L", pch = 6, col = "gray40")
abline(L.k, lty = 3, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "E", pch = 5, col = "gray40")
abline(E.k, lty = 4, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "H", pch = 4, col = "gray40")
abline(H.k, lty = 5, lwd = 4)
legend(0, 2, c("Native Only", "Invasive Only", "Low Invasive", "Equal Invasive", "High Invasive"), pch = c(8, 3, 6, 5, 4), lty = c(1, 2, 3, 4, 5))
legend(0, 2, c("Native Only", "Invasive Only", "Low Invasive", "Equal Invasive", "High Invasive"), pch = c(8, 3, 6, 5, 4), lty = c(1, 2, 3, 4, 5), lwd = 4)
par(las = 1, cex = 1)
par(las = 1, cex = 1)
plot(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "N", xlim = c(0, 25), ylim = c(0, 5), pch = 8, col = "gray40")
abline(N.k, lty = 1, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "I", pch = 3, col = "gray40" )
abline(I.k, lty = 2, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "L", pch = 6, col = "gray40")
abline(L.k, lty = 3, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "E", pch = 5, col = "gray40")
abline(E.k, lty = 4, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "H", pch = 4, col = "gray40")
abline(H.k, lty = 5, lwd = 4)
legend(0, 2, c("Native Only", "Invasive Only", "Low Invasive", "Equal Invasive", "High Invasive"), pch = c(8, 3, 6, 5, 4), lty = c(1, 2, 3, 4, 5), lwd = 2)
legend(0, 2, c("Native Only", "Invasive Only", "Low Invasive", "Equal Invasive", "High Invasive"), pch = c(8, 3, 6, 5, 4), lty = c(1, 3, 2, 4, 5), lwd = 2)
par(las = 1, cex = 1)
plot(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "N", xlim = c(0, 25), ylim = c(0, 5), pch = 8, col = "gray40")
abline(N.k, lty = 1, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "I", pch = 3, col = "gray40" )
abline(I.k, lty = 3, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "L", pch = 6, col = "gray40")
abline(L.k, lty = 2, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "E", pch = 5, col = "gray40")
abline(E.k, lty = 4, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "H", pch = 4, col = "gray40")
abline(H.k, lty = 5, lwd = 4)
legend(0, 2, c("Native Only", "Invasive Only", "Low Invasive", "Equal Invasive", "High Invasive"), pch = c(8, 3, 6, 5, 4), lty = c(1, 3, 2, 4, 5), lwd = 2)
par(las = 1, cex = 1)
plot(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "N", xlim = c(0, 25), ylim = c(0, 5), pch = 8, col = "gray40")
abline(N.k, lty = 1, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "I", pch = 3, col = "gray40" )
abline(I.k, lty = 3, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "L", pch = 6, col = "gray40")
abline(L.k, lty = 2, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "E", pch = 5, col = "gray40")
abline(E.k, lty = 5, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "H", pch = 4, col = "gray40")
abline(H.k, lty = 4, lwd = 4)
legend(0, 2, c("Native Only", "Invasive Only", "Low Invasive", "Equal Invasive", "High Invasive"), pch = c(8, 3, 6, 5, 4), lty = c(1, 3, 2, 5, 4), lwd = 2)
par(las = 1, cex = 1)
plot(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "N", xlim = c(0, 25), ylim = c(0, 5), pch = 8, col = "gray40")
abline(N.k, lty = 1, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "I", pch = 3, col = "gray40" )
abline(I.k, lty = 3, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "L", pch = 6, col = "gray40")
abline(L.k, lty = 2, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "E", pch = 5, col = "gray40")
abline(E.k, lty = 4, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "H", pch = 4, col = "gray40")
abline(H.k, lty = 5, lwd = 4)
legend(0, 2, c("Native Only", "Invasive Only", "Low Invasive", "Equal Invasive", "High Invasive"), pch = c(8, 3, 6, 5, 4), lty = c(1, 3, 2, 4, 5), lwd = 2)
par(las = 1, cex = 1)
plot(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "N", xlim = c(0, 25), ylim = c(0, 5), pch = 8, col = "gray40" ylab = "ln Percent AFDM Remaining + 1", xlab = "Days in Tank")
par(las = 1, cex = 1)
plot(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "N", xlim = c(0, 25), ylim = c(0, 5), pch = 8, col = "gray40", ylab = "ln Percent AFDM Remaining + 1", xlab = "Days in Tank")
abline(N.k, lty = 1, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "I", pch = 3, col = "gray40" )
abline(I.k, lty = 3, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "L", pch = 6, col = "gray40")
abline(L.k, lty = 2, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "E", pch = 5, col = "gray40")
abline(E.k, lty = 4, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "H", pch = 4, col = "gray40")
abline(H.k, lty = 5, lwd = 4)
legend(0, 2, c("Native Only", "Invasive Only", "Low Invasive", "Equal Invasive", "High Invasive"), pch = c(8, 3, 6, 5, 4), lty = c(1, 3, 2, 4, 5), lwd = 2)
par(las = 1, cex = 1)
plot(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "N", xlim = c(0, 25), ylim = c(0, 5), pch = 8, col = "gray40", ylab = "ln Percent AFDM Remaining + 1", xlab = "Days in Tank")
abline(N.k, lty = 1, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "I", pch = 3, col = "gray40" )
abline(I.k, lty = 3, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "L", pch = 6, col = "gray40")
abline(L.k, lty = 2, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "E", pch = 5, col = "gray40")
abline(E.k, lty = 4, lwd = 4)
points(log(percAFDM.rem + 1) ~ days.elapsed, data = leaf.AFDM, subset = treatment == "H", pch = 4, col = "gray40")
abline(H.k, lty = 5, lwd = 4)
legend(0, 2, c("Native Only", "Invasive Only", "Low Invasive", "Equal Invasive", "High Invasive"), pch = c(8, 3, 6, 5, 4), lty = c(1, 3, 2, 4, 5), lwd = 2)
dev.copy(jpeg, "./output/plots/k_by_treat_days.jpg")
dev.off()
