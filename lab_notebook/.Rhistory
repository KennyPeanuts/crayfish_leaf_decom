setwd("~/current_research/crayfish_leaf_decom/lab_notebook")
library("tidyverse") # for data analysis and ggplot graphing
#library("ggpubr") # for plot creation and saving
library("lme4") # permits linear mixed model construction
library("lmerTest") # calculates p-values from linear mixed models
cray.raw <- read.table("./data/crayfish_mass_raw.csv", header = T, sep = ",")
mean.mass <- cray.raw %>%
group_by(Year, Type, Tank) %>%
summarize(mean.Stocked.Mass = mean(Stocked_Mass, na.rm = T), sd.Stocked.Mass = sd(Stocked_Mass), mean.Harvested.Mass = mean(Harvested_Mass, na.rm = T), sd.Harvested.Mass = sd(Harvested_Mass), total.Harvested.Mass = sum(Harvested_Mass, na.rm = T))
tank.abundance <- cray.raw %>%
group_by(Year, Type, Tank) %>%
summarize(Abundance = unique(Abundance), Total.Abundance = unique(Total_Abundance), Invasive.Abundance = unique(Invasive_Abundance))
tank.treatment <- cray.raw %>%
group_by(Year, Type, Tank) %>%
summarize(Treatment = unique(Treatment))
cray.mean <-
left_join(mean.mass, tank.abundance)
cray.mean <-
left_join(cray.mean, tank.treatment)
cray.N <-
cray.raw %>%
group_by(Year, Type, Tank) %>%
summarize(N.initial = length(which(!is.na(Stocked_Mass))), N.final = length(which(!is.na(Harvested_Mass))))
prop.surv <- cray.N$N.final / cray.N$N.initial
cray.N <- data.frame(cray.N, prop.surv)
cray.N <-
left_join(cray.N, tank.abundance)
cray.N <-
left_join(cray.N, tank.treatment)
ind.delta.mass <- cray.mean$mean.Harvested.Mass - cray.mean$mean.Stocked.Mass
cray.mean <- data.frame(cray.mean, ind.delta.mass)
cray.mean$Treatment <- factor(cray.mean$Treatment, levels = c("Ctl_Native", "Ctl_Invasive", "Low", "Equal", "High"))
cray.mean %>%
group_by(Year, Type) %>%
summarize(mean.harvested = mean(mean.Harvested.Mass, na.rm = T), sd.harvested = sd(mean.Harvested.Mass, na.rm = T), min.harvested = min(mean.Harvested.Mass, na.rm = T), max.harvested = max(mean.Harvested.Mass, na.rm = T), N = length(mean.Harvested.Mass))
(delta.mass.tot.abundance.mod <- ind.delta.mass ~ 1 + total.abundance * type + (1|Tank), data = cray.mean, subset = Year == "2015")
(delta.mass.tot.abundance.mod <- lmer(ind.delta.mass ~ 1 + total.abundance * type + (1|Tank), data = cray.mean, subset = Year == "2015"))
summary(lm(ind.delta.mass ~ Total.Abundance * type, data = cray.mean, subset = year == "2015"))
summary(lm(ind.delta.mass ~ Total.Abundance * Type, data = cray.mean, subset = year == "2015"))
(delta.mass.tot.abundance.mod <- lmer(ind.delta.mass ~ 1 + Total.Abundance * Type + (1|Tank), data = cray.mean, subset = Year == "2015"))
summary(delta.mass.tot.abundance.mod)
anova(delta.mass.tot.abundance.mod)
ggplot(subset(cray.mean, Year == "2015"), mapping = aes(y = ind.delta.mass, x = Total.Abundance, color = Type)) +
geom_point() +
geom_smooth(
method = "lm"
) +
theme_classic()
(delta.mass.tot.abundance.mod <- lmer(ind.delta.mass ~ 1 + Total.Abundance * Type + (1|Tank), data = cray.mean, subset = Year == "2016"))
summary(delta.mass.tot.abundance.mod)
anova(delta.mass.tot.abundance.mod)
anova(delta.mass.tot.abundance.mod)
(delta.mass.tot.abundance.mod <- lmer(ind.delta.mass ~ (1|Tank) + Total.Abundance, data = cray.mean, subset = Year == "2016"))
summary(delta.mass.tot.abundance.mod)
(delta.mass.tot.abundance.mod <- lmer(ind.delta.mass ~ (1|Tank) + Total.Abundance * Type, data = cray.mean, subset = Year == "2016"))
summary(delta.mass.tot.abundance.mod)
anova(delta.mass.tot.abundance.mod)
head(cray.mean)
(delta.mass.tot.abundance.mod <- lmer(ind.delta.mass ~ (1|Tank) + Total.Abundance * Type, data = cray.mean, subset = Year == "2016"))
(delta.mass.tot.abundance.mod <- lmer(ind.delta.mass ~ (1+Type|Tank) + Total.Abundance * Type, data = cray.mean, subset = Year == "2016"))
(delta.mass.tot.abundance.mod <- lmer(ind.delta.mass ~ (Type|Tank) + Total.Abundance * Type, data = cray.mean, subset = Year == "2016"))
(delta.mass.tot.abundance.mod <- lmer(ind.delta.mass ~ (1 + Tank|Type) + Total.Abundance * Type, data = cray.mean, subset = Year == "2016"))
summary(delta.mass.tot.abundance.mod)
anova(delta.mass.tot.abundance.mod)
(delta.mass.tot.abundance.mod <- lmer(ind.delta.mass ~ (1|Tank) + Total.Abundance * Type, data = cray.mean, subset = Year == "2016"))
summary(delta.mass.tot.abundance.mod)
anova(delta.mass.tot.abundance.mod)
ggplot(subset(cray.mean, Year == "2015"), mapping = aes(y = ind.delta.mass, x = Treatment, color = Type)) +
geom_point(
position = position_jitterdodge(
dodge.width = 0.65,
jitter.width = 0.15
)
) +
stat_summary(
fun = mean,
fun.min = function(x) mean(x) - sd(x),
fun.max = function(x) mean(x) + sd(x),
position = position_dodge(width = 0.65)
) +
theme_classic()
ggplot(subset(cray.mean, Year == "2016"), mapping = aes(y = ind.delta.mass, x = Treatment, color = Type)) +
geom_point(
position = position_jitterdodge(
dodge.width = 0.65,
jitter.width = 0.15
)
) +
stat_summary(
fun = mean,
fun.min = function(x) mean(x) - sd(x),
fun.max = function(x) mean(x) + sd(x),
position = position_dodge(width = 0.65)
) +
theme_classic()
ggplot(subset(cray.mean, Year == "2015"), mapping = aes(y = ind.delta.mass, x = Total.Abundance, color = Type)) +
geom_point() +
geom_smooth(
method = "lm"
) +
theme_classic()
ggplot(subset(cray.mean, Year == "2016"), mapping = aes(y = ind.delta.mass, x = Total.Abundance, color = Type)) +
geom_point() +
geom_smooth(
method = "lm"
) +
theme_classic()
anova(delta.mass.tot.abundance.mod)
cray.mean %>%
group_by(Year, Type) %>%
summarize(mean.harvested = mean(ind.delta.mass, na.rm = T), sd.harvested = sd(ind.delta.mass, na.rm = T), min.harvested = min(ind.delta.mass, na.rm = T), max.harvested = max(ind.delta.mass, na.rm = T), N = length(ind.delta.mass))
